<?php
// templates/pages/progression.html.php

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: –æ—Ç—Ä–∏—Å–æ–≤–∞—Ç—å –±–ª–æ–∫ —Å—Ç—Ä–æ–∫ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Å–ø–∏—Å–∫–æ–≤ "- "
if (!function_exists('renderParagraphsAndLists')) {
    function renderParagraphsAndLists(array $lines): void {
        $inList = false;
        $leadShown = false; // –ø–µ—Ä–≤—ã–π –∞–±–∑–∞—Ü-–æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –∫–∞–∫ yellow
        foreach ($lines as $l) {
            if (strpos($l, '- ') === 0) {
                if (!$inList) {
                    echo "<ul>\n";
                    $inList = true;
                }
                // –î–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è #0066FF –ø—É–Ω–∫—Ç—ã —Å–ø–∏—Å–∫–∞ –±—ã–ª–∏ —Å–∏–Ω–∏–º–∏ —á–µ—Ä–µ–∑ –∫–ª–∞—Å—Å,
                // –∞ –Ω–∞–∑–≤–∞–Ω–∏—è –ø–æ–¥–∑–µ–º–µ–ª–∏–π/—Ä–µ–π–¥–æ–≤ ‚Äî –∂–∏—Ä–Ω—ã–º–∏ –∏ –∑–æ–ª–æ—Ç—ã–º–∏.
                // –í—ã–¥–µ–ª–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–æ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è " ‚Äî " –∏–ª–∏ " (" –∏ –æ–±–µ—Ä–Ω—ë–º –≤ <strong class="gold">.
                $text = substr($l, 2);
                $name = $text;
                $rest = '';
                $pos = strpos($text, ' ‚Äî ');
                if ($pos === false) {
                    $pos = strpos($text, ' (');
                }
                if ($pos !== false) {
                    $name = substr($text, 0, $pos);
                    $rest = substr($text, $pos); // –≤–∫–ª—é—á–∞—è —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
                }
                echo '<li><strong class="gold">' . htmlspecialchars(trim($name)) . '</strong>' . htmlspecialchars($rest) . "</li>\n";
            } else {
                if ($inList) {
                    echo "</ul>\n";
                    $inList = false;
                }
                // –ü–µ—Ä–≤—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∞–±–∑–∞—Ü —Ñ–∞–∑—ã –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –∂—ë–ª—Ç—ã–º
                $classes = $leadShown ? 'small' : 'small yellow';
                echo '<p class="' . $classes . '">' . htmlspecialchars($l) . "</p>\n";
                $leadShown = true;
            }
        }
        if ($inList) {
            echo "</ul>\n";
        }
    }
}

// –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
$pageTitle = $pageTitle ?? '–ü—Ä–æ–≥—Ä–µ—Å—Å–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞';
$updatedAt = null;
?>

<div class="cabinet-page" id="top">
    <h2>üìú –ü—Ä–æ–≥—Ä–µ—Å—Å–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (Classic ‚Üí TBC ‚Üí WotLK)</h2>

        <?php if (!empty($intro ?? [])): ?>
            <div class="cabinet-card">
                <div class="info">
                    <?php foreach ($intro as $p): ?>
                        <p class="small"><?= htmlspecialchars($p) ?></p>
                    <?php endforeach; ?>
                </div>
            </div>
        <?php endif; ?>

        <?php if (!empty($phases ?? [])): ?>
            <div class="cabinet-card">
                <div class="minor" style="margin-bottom: 8px;">
                    üîó –ë—ã—Å—Ç—Ä—ã–µ —Å—Å—ã–ª–∫–∏ –ø–æ —Ñ–∞–∑–∞–º:
                </div>
                <ul>
                    <?php foreach ($phases as $ph): ?>
                        <li><a class="btn-link" href="#phase-<?= (int)$ph['number'] ?>">–§–∞–∑–∞ <?= (int)$ph['number'] ?> ‚Äî <?= htmlspecialchars($ph['title']) ?></a></li>
                    <?php endforeach; ?>
                </ul>
                <?php if ($updatedAt): ?>
                    <div class="minor mt5">–û–±–Ω–æ–≤–ª–µ–Ω–æ: <?= $updatedAt ?></div>
                <?php endif; ?>
            </div>

            <div class="cabinet-card" style="margin-top:8px;">
                <div class="minor" style="margin-bottom: 6px;">–ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</div>
                <div>
                    <a href="#" class="headerButtonMy mr5" data-action="filter" data-era="all">–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ</a>
                    <a href="#" class="headerButtonMy mr5" data-action="filter" data-era="classic">Classic</a>
                    <a href="#" class="headerButtonMy mr5" data-action="filter" data-era="tbc">TBC</a>
                    <a href="#" class="headerButtonMy mr5" data-action="filter" data-era="wotlk">WotLK</a>
                    <a href="#" class="headerButtonMy mr5" data-action="expand" data-mode="all">–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ</a>
                    <a href="#" class="headerButtonMy" data-action="collapse" data-mode="all">–°–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ</a>
                </div>
            </div>

            <br>

            <?php foreach ($phases as $ph): ?>
                <div class="cabinet-card phase-block" id="phase-<?= (int)$ph['number'] ?>" data-era="<?= htmlspecialchars($ph['era'] ?? 'unknown') ?>">
                    <div style="display:flex; align-items:center; justify-content:space-between; gap:6px;">
                        <h3 style="color:#ff6600; margin-right:8px;">–§–∞–∑–∞ <?= (int)$ph['number'] ?> ‚Äî <?= htmlspecialchars($ph['title']) ?></h3>
                        <div style="white-space:nowrap;">
                            <a href="#top" class="headerButtonMy mr5">–ù–∞–≤–µ—Ä—Ö ‚Üë</a>
                            <a href="#" class="headerButtonMy js-toggle" data-target="phase-<?= (int)$ph['number'] ?>">–°–≤–µ—Ä–Ω—É—Ç—å</a>
                        </div>
                    </div>
                    <div class="phase-body">
                        <?php renderParagraphsAndLists($ph['lines']); ?>
                    </div>
                    <div class="b-expa"></div>
                </div>
            <?php endforeach; ?>
        <?php endif; ?>

    <br>
</div>

<div class="login-links" style="margin-top: 20px;">
    <a href="/" class="login-link">
        <img src="/images/icons/home.png" alt="">
        –ù–∞ –≥–ª–∞–≤–Ω—É—é
    </a>
    <span class="link-separator">‚Ä¢</span>
    <a href="/news" class="login-link">
        –ö –Ω–æ–≤–æ—Å—Ç—è–º
    </a>
    <?php if ($updatedAt): ?>
        <span class="link-separator">‚Ä¢</span>
        <span style="opacity: 0.7;">–í–µ—Ä—Å–∏—è: <?= $updatedAt ?></span>
    <?php endif; ?>
</div>

<script>
(function(){
    function qsAll(sel, root){ return Array.prototype.slice.call((root||document).querySelectorAll(sel)); }
    function byId(id){ return document.getElementById(id); }
    function setDisplay(el, show){ el.style.display = show ? '' : 'none'; }
    function togglePhaseBody(container){
        var body = container.querySelector('.phase-body');
        if (!body) return;
        var link = container.querySelector('.js-toggle');
        var hidden = body.style.display === 'none';
        body.style.display = hidden ? '' : 'none';
        if (link) link.textContent = hidden ? '–°–≤–µ—Ä–Ω—É—Ç—å' : '–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å';
    }

    // –§–∏–ª—å—Ç—Ä —ç–ø–æ—Ö
    function applyEraFilter(era){
        qsAll('.phase-block').forEach(function(block){
            var bEra = block.getAttribute('data-era') || 'unknown';
            setDisplay(block, era === 'all' || bEra === era);
        });
    }

    // –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å/–°–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ
    function setAllExpanded(expand){
        qsAll('.phase-block .phase-body').forEach(function(body){
            body.style.display = expand ? '' : 'none';
        });
        qsAll('.phase-block .js-toggle').forEach(function(a){
            a.textContent = expand ? '–°–≤–µ—Ä–Ω—É—Ç—å' : '–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å';
        });
    }

    // –ù–∞–≤–µ—à–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    qsAll('a.headerButtonMy[data-action]').forEach(function(btn){
        btn.addEventListener('click', function(e){
            e.preventDefault();
            var action = btn.getAttribute('data-action');
            if (action === 'filter') {
                applyEraFilter(btn.getAttribute('data-era') || 'all');
            } else if (action === 'expand') {
                setAllExpanded(true);
            } else if (action === 'collapse') {
                setAllExpanded(false);
            }
        });
    });

    qsAll('.phase-block .js-toggle').forEach(function(a){
        a.addEventListener('click', function(e){
            e.preventDefault();
            var id = a.getAttribute('data-target');
            var container = byId(id);
            if (container) togglePhaseBody(container);
        });
    });
})();
</script>
